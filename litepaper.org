#+title: Censer Litepaper
#+author: Hsin-Yi Chen

* 專案概要
Censer 是基於 Polkadot， 採用民主治理的機器學習模型託管服務， 相較於傳統由公司帶領產品走向的方式，Censer 將部署權利下放到由開發商、消費者與第三方稽核者組成的 DAO，使「無國界」（borderless）的「多方利害關係人」(Multi Stakeholder）可決定機器學習模型的治理方向以及消費者賠償機制。

Censer 讓每個機器學習模型都是一個 DAO，有專門的存款來承擔再保險的責任，負責管理風險不確定的機器學習模型的部署（和反部署）。所有的部署都要有可驗證聲明智能合約可供第三方稽核者檢驗，檢驗不通過，則執行可驗證聲明智能合約的的賠償機制。
* 動機
本專案的目的在於在法律責任歸屬尚未明時，由機器學習模型的投資者、開發者、使用者提撥一筆資金作為儲備金，藉由智能合約的「無需信任」（trustless）特性，可以先動用儲備金支付損害賠償，使損害受到填補，也分散了機器學習開發者、使用者的責任風險，讓敏感的機器學習模型更容易被市場及監管者接受。
* 架構
Censer 專案將基於 Substrate 3.0、ink!，以及其它 Polkadot 平行鏈來達成目標。Censer 將包含 Censer 節點、Censer 議會、保險預備金庫，以及網頁前端。
DAO 相關的功能透過跨鏈通訊的方式或由 SubDAO 平行鏈實現。
** 基礎元件
#+begin_src plantuml :file images/sarch-components.png
@startuml
actor "Model User" as user1
actor "Model Developer" as user3
actor "Model Auditor" as user2
actor "DAO Governor" as user4

component DApp
component SDK

package {
  component "Censer 議會" as council
  component "保險預備金庫" as vault
  component "可驗證聲明" as vc
  component "Model DAO 合約" as model1
}

package {
  cloud "機器學習模型執行環境" as modelruntime
  cloud "Censer 網路" as net
  cloud SubDao
  cloud IPFS
}

user1 --> DApp
DApp <-> SDK
SDK <-l-> model1

user2 --> model1
user3 --> model1
user4 --> council

model1 <-r-> council
model1 <-d-> vc

council <-d--> net
council <-r-> vault

net <--> modelruntime
net <--> SubDao
net <--> IPFS
@enduml
#+end_src

#+RESULTS:
[[file:images/sarch-components.png]]

*** Censer 節點（Censer Node）
Censer 節點是由 Substrate 3.0 構建的客製化鏈節點，Censer 網路的基礎，包含一般節點的基本功能，同時提供連續部署跟執行機器學習模型的功能。
*** 機器學習模型執行環境 (Model Runtime)
機器學習模型執行環境讀取 Model 並做推論，以 Web Service 的方式作為接口，並透過 NixOS 達成可復現，可回滾，在開發端、生產端一致的執行環境。
*** 可驗證聲明（Verifiable Claims）
可驗證聲明是支付機器學習模型保險金的智能合約，在該合約中會紀錄被保險的機器學習模型，被保險的機器學習模型的執行環境以及開發者聲明的特性，這個可驗證聲明可以被不特定任何人嘗試證偽後取得獎勵，並使機器學習模型返回上一版本或是停止啟用，端看智能合約設定的條件。可驗證聲明將被設計成為 NFT 可在在二級市場交易。
*** 保險預備金庫（Insurance Reserves Vault）
保險預備金庫是存放機器學習模型保險預備金的智能合約，此合約管理任何有價代幣。
*** Web 前端（Web Frontend）
Web 前端提供 Web 介面讓任何人可以跟 Censer 網路互動。前端介面提供基本的部署機器機器學習模型，質押保險金，轉帳等功能。基於 TypeScript 與 Node.js 開發。
*** SDK
SDK 讓 Model 開發者能將 DApp 與 Censer Network 互動。一開始將只支援 TypeScript。
** 使用情境
*** 部署機器學習模型
機器學習模型開發者透過合約範本部署 DAO 機器學習模型，以及可驗證聲明合約。一開始 Model DAO 治理模型為 Ｍoloch，這確保機器學習模型開發者、機器學習模型使用者、機器學習模型稽核者利益一致。
*** 稽核機器學習模型
機器學習模型稽核者透過下載可驗證聲明合約，輸入可以證偽的「驗證資料集」（Validation Dataset)，取得稽核紀錄。
*** 獎勵
機器學習模型稽核者提供稽核紀錄，比對可驗證聲明合約記載的條件取得稽核獎勵。
*** 賠償
機器學習模型使用者提出賠償提案，賠償提案通過議會審議後支付賠償金。
*** 下架/回滾機器學習模型
可驗證聲明合約在保險預備金不足時，強制執行是將機器學習模型下架，或是返回到上一版本。
* Substrate / Polkadot 整合
Censer network 會以平行鏈的方式連接上 Polkadot。
** Off-chain Worker
Censer Network 的節點會在 Off-chain Work 啟用的狀態下編譯。Off-chain Work 用於取得鏈外的資訊，例如機器學習模型與資料集；操作機器學習模型執行環境。
** ink!
前面提到的智能合約將基於 ink! 開發，並運行在客製化的 pallet\under{}contract。
* 治理代幣
Censer Network 將發行「XI」治理代幣，用於部署模型跟發行可驗證聲明，投票財政國庫提案跟管理網路。Censer Network 將要求被部署的模型至少需質押 1 XI ，取「一『息』（XI）尚存」之意，

模型稽核者可透過執行稽核獲得 XI 代幣; 模型使用者可透過持續啟用模型的功能來獲得 XI 代幣; 模型開發者則透過使可驗證聲明持續有效來獲得 XI 代幣。因此部署跟管理保險金賠償的權利將隨著模型上線動態調整。
* 開發路徑
- Phase 1 :: 完成上述提到的最小功能的 PoC 提供少數人測試。 功能包括：1. 機器學習模型推論, 2. 可驗證聲明 3. 保險預備金庫 4. 議會 5. 前端
- Phase 2 :: 支援更多機器學習模型框架跟可驗證聲明範本。
- Phase 3 :: 面向公眾提供服務。
